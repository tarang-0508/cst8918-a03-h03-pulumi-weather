{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/routes/_index.tsx", "../app/api-services/open-weather-service.ts", "../app/utils/text-formatting.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext,\r\n  // This is ignored so we can keep it in the template for visibility.  Feel\r\n  // free to delete this parameter in your app if you're not using it!\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  loadContext: AppLoadContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\r\nimport type { LinksFunction } from \"@remix-run/node\";\r\nimport {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\n\r\nexport const links: LinksFunction = () => [\r\n  ...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\r\n];\r\n\r\nexport default function App() {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import { json } from '@remix-run/node'\r\nimport { useLoaderData } from '@remix-run/react'\r\nimport { fetchWeatherData } from '../api-services/open-weather-service'\r\nimport { capitalizeFirstLetter } from '../utils/text-formatting'\r\nimport type { MetaFunction } from '@remix-run/node'\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return [\r\n    { title: 'Remix Weather' },\r\n    {\r\n      name: 'description',\r\n      content: 'A demo web app using Remix and OpenWeather API.',\r\n    },\r\n  ]\r\n}\r\n\r\nconst location = {\r\n  city: 'Ottawa',\r\n  postalCode: 'K2G 1V8', // Algonquin College, Woodroffe Campus\r\n  lat: 45.3211,\r\n  lon: -75.7391,\r\n  countryCode: 'CA',\r\n}\r\nconst units = 'metric'\r\n\r\nexport async function loader() {\r\n  // TODO: accept query params for location and units\r\n  // TODO: look up location by postal code\r\n\r\n  const data = await fetchWeatherData({\r\n    lat: location.lat,\r\n    lon: location.lon,\r\n    units: units,\r\n  })\r\n  return json({ currentConditions: data })\r\n}\r\n\r\nexport default function CurrentConditions() {\r\n  const { currentConditions } = useLoaderData<typeof loader>()\r\n  const weather = currentConditions.weather[0]\r\n  return (\r\n    <>\r\n      <main\r\n        style={{\r\n          padding: '1.5rem',\r\n          fontFamily: 'system-ui, sans-serif',\r\n          lineHeight: '1.8',\r\n        }}\r\n      >\r\n        <h1>Remix Weather</h1>\r\n        <p>\r\n          For Algonquin College, Woodroffe Campus <br />\r\n          <span style={{ color: 'hsl(220, 23%, 60%)' }}>\r\n            (LAT: {location.lat}, LON: {location.lon})\r\n          </span>\r\n        </p>\r\n        <h2>Current Conditions</h2>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            gap: '2rem',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <img src={getWeatherIconUrl(weather.icon)} alt=\"\" />\r\n          <div style={{ fontSize: '2rem' }}>\r\n            {currentConditions.main.temp.toFixed(1)}\u00B0C\r\n          </div>\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: '1.2rem',\r\n            fontWeight: '400',\r\n          }}\r\n        >\r\n          {capitalizeFirstLetter(weather.description)}. Feels like{' '}\r\n          {currentConditions.main['feels_like'].toFixed(1)}\u00B0C.\r\n          <br />\r\n          <span style={{ color: 'hsl(220, 23%, 60%)', fontSize: '0.85rem' }}>\r\n            updated at{' '}\r\n            {new Intl.DateTimeFormat('en-CA', {\r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric',\r\n              hour: 'numeric',\r\n              minute: '2-digit',\r\n            }).format(currentConditions.dt * 1000)}\r\n          </span>\r\n        </p>\r\n      </main>\r\n      <section\r\n        style={{\r\n          backgroundColor: 'hsl(220, 54%, 96%)',\r\n          padding: '0.5rem 1.5rem 1rem 1.5rem',\r\n          borderRadius: '0.25rem',\r\n        }}\r\n      >\r\n        <h2>Raw Data</h2>\r\n        <pre>{JSON.stringify(currentConditions, null, 2)}</pre>\r\n      </section>\r\n      <hr style={{ marginTop: '2rem' }} />\r\n      <p>\r\n        Learn how to customize this app. Read the{' '}\r\n        <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\r\n          Remix Docs\r\n        </a>\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction getWeatherIconUrl(iconCode: string) {\r\n  return `http://openweathermap.org/img/wn/${iconCode}@2x.png`\r\n}\r\n", "const API_KEY = process.env.WEATHER_API_KEY\r\nconst TEN_MINUTES = 1000 * 60 * 10 // in milliseconds\r\n\r\nconst resultsCache: Record<string, { lastFetch: number; data: unknown }> = {}\r\nfunction getCacheEntry(key: string) {\r\n  return resultsCache[key]\r\n}\r\nfunction setCacheEntry(key: string, data: unknown) {\r\n  resultsCache[key] = { lastFetch: Date.now(), data }\r\n}\r\nfunction isDataStale(lastFetch: number) {\r\n  return Date.now() - lastFetch > TEN_MINUTES\r\n}\r\n\r\ninterface FetchWeatherDataParams {\r\n  lat: number\r\n  lon: number\r\n  units: string\r\n}\r\nexport async function fetchWeatherData({\r\n  lat,\r\n  lon,\r\n  units,\r\n}: FetchWeatherDataParams) {\r\n  const baseURL = 'https://api.openweathermap.org/data/2.5/weather'\r\n  const queryString = `lat=${lat}&lon=${lon}&units=${units}&appid=${API_KEY}`\r\n\r\n  const cacheEntry = getCacheEntry(queryString)\r\n  if (cacheEntry && !isDataStale(cacheEntry.lastFetch)) {\r\n    return cacheEntry.data\r\n  }\r\n  const response = await fetch(`${baseURL}?${queryString}`)\r\n  const data = await response.json()\r\n  setCacheEntry(queryString, data)\r\n  return data\r\n}\r\n\r\nexport async function getGeoCoordsForPostalCode(\r\n  postalCode: string,\r\n  countryCode: string,\r\n) {\r\n  const url = `http://api.openweathermap.org/geo/1.0/zip?zip=${postalCode},${countryCode}&appid=${API_KEY}`\r\n  const response = await fetch(url)\r\n  const data = response.json()\r\n  return data\r\n}\r\n", "export function capitalizeFirstLetter(sourceString: string) {\r\n  return sourceString.charAt(0).toUpperCase() + sourceString.slice(1)\r\n}\r\n", "export default {'entry':{'module':'/build/entry.client-P5W2UT5D.js','imports':['/build/_shared/chunk-VKPL4GB7.js','/build/_shared/chunk-MT6G6ONZ.js','/build/_shared/chunk-IRPDQIET.js','/build/_shared/chunk-CR7ECERL.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-DFC53E46.js','/build/_shared/chunk-KVWRS3UY.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-CXW6VM32.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-2XWMO5ND.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'2877521f','hmr':{'runtime':'/build/_shared\\\\chunk-CR7ECERL.js','timestamp':1748043034495},'url':'/build/manifest-2877521F.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\taran\\\\cst8918-a03-h03-pulumi-weather\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "units", "jsxDEV"]
}
